分析源码
public E next() {
            checkForComodification();
            int i = cursor;
            if (i >= size)
                throw new NoSuchElementException();
            Object[] elementData = ArrayList.this.elementData;
            if (i >= elementData.length)
                throw new ConcurrentModificationException();
            cursor = i + 1;
            return (E) elementData[lastRet = i];
        }
  final void checkForComodification() {
            if (modCount != expectedModCount)
                throw new ConcurrentModificationException();
        }



modcount： The number of times this list has been <i>structurally modified</i>.实际修改集合list的次数
protected transient int modCount = 0;
expectedModCount ：预期修改集合次数

调用next方法时都会检查两个值是否相等

